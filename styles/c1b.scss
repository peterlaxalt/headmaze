@keyframes spin-cube {
  0% {
    transform: rotateX(0) rotateY(0) rotateZ(0) translateZ(0px);
  }
  100% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(0) translateZ(0px);
  }
}

@keyframes iso-spin-cube {
  0% {
    transform: rotateX(0) rotateY(0) rotateZ(0) translateZ(0px);
  }
  25% {
    transform: rotateX(0) rotateY(0) rotateZ(0) translateZ(0px);
  }
  50% {
    transform: rotateX(180deg) rotateY(0deg) rotateZ(0) translateZ(0px);
  }
  75% {
    transform: rotateX(180deg) rotateY(0deg) rotateZ(0) translateZ(0px);
  }
  100% {
    transform: rotateX(180deg) rotateY(180deg) rotateZ(0) translateZ(0px);
  }
}

$c1b-anim: iso-spin-cube;
$c1b-anim-dur: 20s;
$c1b-perspective: unset;

// ______________________________________________________

body.c1b {
  * {
    box-sizing: border-box;
  }

  [data-hm-g] {
    position: fixed;

    left: 50%;
    top: 50%;

    transform: translate(-50%, -50%);

    width: 80vh;
    height: 80vh;

    display: grid;

    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    gap: 4.25vh;
  }

  [data-hm-g] .c {
    transform: rotate(var(--d));

    background-color: var(--b);

    cursor: pointer;
  }

  [data-hm-g] .c::before {
    content: "";

    position: absolute;

    left: 0;
    top: 0;

    width: 100%;
    height: 100%;

    background-image: var(--a);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center center;
  }

  [data-hm-w] {
    height: 100vh;
    width: 100vw;
  }

  [data-hm-g] .c::before,
  [data-hm-bm],
  [data-hm-mode-toggle],
  [data-hm-mode-toggle],
  .t {
    mix-blend-mode: exclusion;
  }

  [data-hm-g] .c,
  [data-hm-w] {
    transition: background-color 1s ease;
  }

  .t {
    position: fixed;

    left: 50%;
    top: 10px;

    transform: translateX(-50%);

    width: 100vw;

    text-align: right;

    padding-right: 10px;

    z-index: 20;
  }

  [data-hm-mode-toggle] {
    appearance: none;
    border: none;
    outline: none;
    background: unset;

    color: #fff;

    box-shadow: 0px 0px 0px 1px #fff;

    border-radius: 999px;

    font-size: 10px;

    margin: 0;
    padding: 5px 10px;

    cursor: pointer;

    @mixin styles-active() {
      background-color: #fff;
      color: #000;
      box-shadow: 0px 0px 0px 1px #fff;
    }

    @at-root {
      body.c1b.--ap {
        [data-hm-mode-toggle="autoplay"] {
          @include styles-active();
        }
      }

      body.c1b.--inv {
        [data-hm-mode-toggle="invert"] {
          @include styles-active();
        }
      }

      body.c1b.--mc {
        [data-hm-mode-toggle="monochrome"] {
          @include styles-active();
        }
      }

      body.c1b.--smooth-rotate {
        [data-hm-mode-toggle="smoothRotate"] {
          @include styles-active();
        }
      }
    }
  }
}

body.c1b::before {
  content: "";

  position: fixed;

  left: 0;
  top: 0;

  width: 100vw;
  height: 100vh;

  z-index: 1000;
  pointer-events: none;

  background: white;

  mix-blend-mode: difference;

  opacity: 0;

  transition: opacity 1s ease;
}

body.c1b.--inv::before {
  opacity: 1;
}

body.c1b.--mc [data-hm-w],
body.c1b.--mc [data-hm-g] .c {
  background-color: #000 !important;
}

.gc {
  position: fixed;
  inset: 0px;
  pointer-events: none;
  overflow: hidden;
  display: flex;
  z-index: 999;
  opacity: 0.1;

  span {
    width: 1000vw;
    height: 1000vh;
    background-image: url("/assets/noise-anim.gif");

    background-size: 50%;
  }
}

// __________________________________________
// Cubes
body.c1b {

  &.--smooth-rotate {
    .hm-cube-view {
      perspective: $c1b-perspective;
      
      .hm-cube {
        animation: spin-cube $c1b-anim-dur linear infinite;
      }
    }
  }

  .hm-cube-view {
    perspective: $c1b-perspective;
    transform-style: preserve-3d;

    overflow: hidden;

    display: grid;
    place-items: center;

    * {
      transform-style: preserve-3d;
    }

    .hm-cube {
      --size: 60vh;
      --gap: calc(var(--size) * .05);

      width: var(--size);
      height: var(--size);

      transform: rotateX(var(--rX)) rotateY(var(--rY)) rotateZ(var(--rZ)) translateZ(0px);

      transition: transform 2s ease;

      // animation: iso-spin-cube $c1b-anim-dur linear infinite;

      // transform: rotateX(45deg) rotateY(45deg) rotateZ(90deg) translateZ(0px);

      [data-face] {
        background: black;

        position: absolute;

        width: var(--size);
        height: var(--size);

        display: grid;
        place-items: center; 

        [data-hm-g] {
          width: var(--size);
          height: var(--size);

          padding: calc(var(--gap) / 2);

          gap: var(--gap);
        }
      }

      [data-face="back"] {
        transform: translateZ(calc(var(--size) / -2)) rotateY(180deg);
      }
      [data-face="right"] {
        transform: rotateY(-270deg) translateX(calc(var(--size) / 2));
        transform-origin: top right;
      }
      [data-face="left"] {
        transform: rotateY(270deg) translateX(calc(var(--size) / -2));
        transform-origin: center left;
      }
      [data-face="top"] {
        transform: rotateX(-90deg) translateY(calc(var(--size) / -2));
        transform-origin: top center;
      }
      [data-face="bottom"] {
        transform: rotateX(90deg) translateY(calc(var(--size) / 2));
        transform-origin: bottom center;
      }
      [data-face="front"] {
        transform: translateZ(calc(var(--size) / 2));
      }
    }
  }

  /// _________________________________________________
  .hm-cube-view {
    position: fixed;

    left: 0;
    top: 0;

    width: 100vw;
    height: 100vh;

    // background: black;

    z-index: 10;
  }
}
