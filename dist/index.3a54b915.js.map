{"mappings":"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","sources":["node_modules/randomcolor/randomColor.js","c1.js"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [18,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [46,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [62,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [178, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [257, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [282, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n","var randomColor = require(\"randomcolor\");\nclass c1 {\n  constructor() {\n    this.dom = {\n      brandmark: {\n        key: \"[data-hm-bm]\",\n        current: null,\n      },\n      grid: {\n        key: \"[data-hm-g]\",\n        current: null,\n      },\n      wrapper: {\n        key: \"[data-hm-w]\",\n        current: null,\n      },\n      toggles: {\n        key: \"[data-hm-mode-toggle]\",\n        elements: [],\n      },\n    };\n\n    this.mode = {\n      monochrome: false,\n      invert: false,\n      autoplay: true,\n    };\n\n    this.cells = [\n      {\n        col: 0,\n        row: 0,\n        asset: \"/assets/arrow.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 1,\n        row: 0,\n        asset: \"/assets/h.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 2,\n        row: 0,\n        asset: \"/assets/e.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 0,\n        row: 1,\n        asset: \"/assets/a.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 1,\n        row: 1,\n        asset: \"/assets/d.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 2,\n        row: 1,\n        asset: \"/assets/m.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 0,\n        row: 2,\n        asset: \"/assets/a.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 1,\n        row: 2,\n        asset: \"/assets/z.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n      {\n        col: 2,\n        row: 2,\n        asset: \"/assets/e.svg\",\n        deg: 0,\n        bg: \"transparent\",\n      },\n    ];\n\n    this.DEBUG_VERBOSE = true;\n\n    this.init();\n  }\n\n  generateStyles(cell) {\n    let styles = [\n      `--c: ${cell.col};`,\n      `--r: ${cell.row};`,\n      `--a: url('${cell.asset}');`,\n      `--d: ${cell.deg}deg;`,\n      `--b: ${cell.bg};`,\n    ];\n\n    return styles.join(\" \");\n  }\n\n  updateCell(e) {\n    this.log(\"createCells(): updating cell\", e);\n\n    let currentCell = e.target;\n\n    let newStyles = {\n      col: this.cells[currentCell.dataset.idx].col,\n      row: this.cells[currentCell.dataset.idx].row,\n\n      asset: \"/assets/arrow.svg\",\n      deg: 90 * Math.floor(Math.random() * 10),\n      bg: randomColor(),\n    };\n\n    this.dom.wrapper.current.setAttribute(\n      \"style\",\n      `background-color: ${randomColor()}`\n    );\n\n    currentCell.setAttribute(\"style\", this.generateStyles(newStyles));\n  }\n\n  createCells() {\n    this.log(\"createCells(): adding cells\", this.dom.grid);\n\n    this.cells.forEach((cell, idx) => {\n      let cellElement = document.createElement(\"div\");\n      cellElement.classList.add(\"c\");\n      cellElement.setAttribute(\"style\", this.generateStyles(cell));\n      cellElement.setAttribute(\"data-idx\", idx);\n      cellElement.addEventListener(\"mouseover\", this.updateCell.bind(this));\n      cellElement.addEventListener(\"click\", this.updateCell.bind(this));\n\n      this.dom.grid.current.appendChild(cellElement);\n    });\n  }\n\n  addBrandmark() {\n    this.log(\"addBrandmark(): adding brandmark\", this.dom.brandmark);\n\n    let img = document.createElement(\"img\");\n    img.setAttribute(\"src\", \"/assets/logomark.svg\");\n\n    this.dom.brandmark.current.appendChild(img);\n  }\n\n  updateMonochrome(is) {\n    let modifier = \"--mc\";\n\n    if (is == true) {\n      document.body.classList.add(modifier);\n    } else {\n      document.body.classList.remove(modifier);\n    }\n  }\n\n  updateInvert(is) {\n    let modifier = \"--inv\";\n\n    if (is == true) {\n      document.body.classList.add(modifier);\n    } else {\n      document.body.classList.remove(modifier);\n    }\n  }\n\n  updateTimer(is) {\n    let modifier = \"--ap\";\n\n    if (is == true) {\n      document.body.classList.add(modifier);\n\n      this.startTimer();\n    } else {\n      document.body.classList.remove(modifier);\n    }\n  }\n\n  checkModes() {\n    if (this.mode.monochrome) {\n      this.updateMonochrome(true);\n    } else {\n      this.updateMonochrome(false);\n    }\n\n    if (this.mode.invert) {\n      this.updateInvert(true);\n    } else {\n      this.updateInvert(false);\n    }\n\n    if (this.mode.autoplay) {\n      this.updateTimer(true);\n    } else {\n      this.updateTimer(false);\n    }\n  }\n\n  handleModeToggle(e) {\n    this.log(\"handleModeToggle(): fired\", e);\n\n    e.preventDefault();\n\n    let modeKey = e.target.dataset.hmModeToggle;\n\n    if (this.mode[modeKey]) {\n      this.log(\n        `handleModeToggle(): this.mode[${modeKey}] toggle from`,\n        this.mode[modeKey]\n      );\n\n      this.mode[modeKey] = false;\n      this.checkModes();\n\n      this.log(\n        `handleModeToggle(): this.mode[${modeKey}] toggle to`,\n        this.mode[modeKey]\n      );\n    } else {\n      this.log(\n        `handleModeToggle(): this.mode[${modeKey}] toggle from`,\n        this.mode[modeKey]\n      );\n\n      this.mode[modeKey] = true;\n      this.checkModes();\n\n      this.log(\n        `handleModeToggle(): this.mode[${modeKey}] toggle to`,\n        this.mode[modeKey]\n      );\n    }\n  }\n\n  createDOM() {\n    this.log(\"createDOM(): creating dom\");\n\n    const brandmark = document.querySelector(this.dom.brandmark.key);\n    const grid = document.querySelector(this.dom.grid.key);\n    const wrapper = document.querySelector(this.dom.wrapper.key);\n    const toggles = document.querySelectorAll(this.dom.toggles.key);\n\n    if (brandmark) {\n      this.log(\"createDOM(): added brandmark\", brandmark);\n\n      this.dom.brandmark.current = brandmark;\n      this.addBrandmark();\n    }\n\n    if (grid) {\n      this.log(\"createDOM(): added grid\", grid);\n\n      this.dom.grid.current = grid;\n      this.createCells();\n\n      grid.addEventListener(\"mouseenter\", this.handleGridEnter.bind(this));\n      grid.addEventListener(\"mouseleave\", this.handleGridExit.bind(this));\n    }\n\n    if (wrapper) {\n      this.log(\"createDOM(): added wrapper\", wrapper);\n\n      this.dom.wrapper.current = wrapper;\n    }\n\n    if (toggles) {\n      toggles.forEach((toggle) => {\n        toggle.addEventListener(\"click\", this.handleModeToggle.bind(this));\n      });\n    }\n\n    this.checkModes();\n  }\n\n  handleGridEnter() {\n    this.gridHovered = true;\n  }\n\n  handleGridExit() {\n    this.gridHovered = false;\n\n    if (this.mode.autoplay) {\n      this.startTimer();\n    }\n  }\n\n  updateRandomCell() {\n    if (this.mode.autoplay && !this.gridHovered) {\n      const randomQuery = `[data-idx=\"${Math.floor(Math.random() * 9)}\"]`;\n      let randomCell = document.querySelector(randomQuery);\n\n      this.log(`updateRandomCell(): selected cell ${randomQuery}`, randomCell);\n      this.updateCell({ target: randomCell });\n\n      this.startTimer();\n    }\n  }\n\n  startTimer() {\n    this.log(\"startTimer(): fired\");\n\n    if (this.mode.autoplay && !this.gridHovered) {\n      this.log(\"startTimer(): timer started\");\n\n      setTimeout(this.updateRandomCell.bind(this), 3000);\n    }\n  }\n\n  log(msg, extras = \" \", isError = false) {\n    if (!this.DEBUG_VERBOSE) return;\n\n    if (!isError) {\n      console.log(msg, extras);\n    } else {\n      console.error(msg, extras);\n    }\n  }\n\n  init() {\n    this.log(\"init(): initialized\");\n\n    this.createDOM();\n  }\n}\n\nlet init = new c1();\n"],"names":["randomColor","seed","colorDictionary","loadColorBounds","colorRanges","options","undefined","parseInt","stringToInteger","TypeError","H","S","count","totalColors","colors","i","push","length","color","setFormat","pickHue","pickSaturation","pickBrightness","hue","randomWithin","hueRange","getRealHueRange","step","j","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","colorInput","number","match","HexToHSB","colorName","range","golden_ratio","r","floor","max","min","rnd","rgb","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","b","replace","red","substr","green","blue","cMax","delta","saturation","k","round","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN","factory","module","exports","$fjfo2","parcelRequire","constructor","this","dom","brandmark","key","current","grid","wrapper","toggles","elements","mode","monochrome","invert","autoplay","cells","col","row","asset","deg","bg","DEBUG_VERBOSE","init","generateStyles","cell","updateCell","e","log","currentCell","target","newStyles","dataset","idx","setAttribute","createCells","forEach","cellElement","document","createElement","classList","add","addEventListener","bind","appendChild","addBrandmark","img","updateMonochrome","is","modifier","body","remove","updateInvert","updateTimer","startTimer","checkModes","handleModeToggle","preventDefault","modeKey","hmModeToggle","createDOM","querySelector","querySelectorAll","handleGridEnter","handleGridExit","toggle","gridHovered","updateRandomCell","randomQuery","randomCell","setTimeout","msg","extras","isError","console","error"],"version":3,"file":"index.3a54b915.js.map"}